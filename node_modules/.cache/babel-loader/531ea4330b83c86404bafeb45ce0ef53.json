{"ast":null,"code":"var _jsxFileName = \"/Users/abhonsley00/Desktop/MVP-master/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField } from '@material-ui/core';\nimport React, { Fragment, useState } from 'react';\nimport './App.css';\nimport medicare from './medicare.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // State management for the Bid ID and matching details\n  const [bidId, setBidId] = useState('');\n  const [bid, setBid] = useState({}); // Function to show content based on the state\n  // If a valid bid ID is entered, it'll show all the fields of the provider\n  // If an invalid Bid is entered, it shows error\n\n  const viewBid = () => {\n    if (!bid) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Invalid Bid ID Entered\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), \"Please enter a valid Bid ID\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (Object.keys(bid).length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"table\",\n        children: Object.keys(bid).map(key => {\n          if (bid[key] && bid[key] !== \"\\n\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title\",\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: bid[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 22\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 22\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter a Bid ID and submit to load details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"heading\",\n      children: \"\\uD83D\\uDD0D Medicare Plan Search-Up Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: bidId,\n      onChange: e => setBidId(e.target.value),\n      placeholder: \"Enter Bid ID\",\n      label: \"Bid ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => {\n        if (bidId && bidId.trim()) setBid(medicare[bidId]);\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"details\",\n      children: viewBid()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"JU6swVyN/wO/I7vAZX0DIUpj27g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/abhonsley00/Desktop/MVP-master/src/App.js"],"names":["Button","TextField","React","Fragment","useState","medicare","App","bidId","setBidId","bid","setBid","viewBid","Object","keys","length","map","key","e","target","value","trim"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,mBAAlC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,iBAArB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,EAAD,CAA9B,CAJgB,CAMhB;AACA;AACA;;AACA,QAAMO,OAAO,GAAG,MAAM;AACpB,QAAI,CAACF,GAAL,EAAU;AACR,0BAAO;AAAA,0DAEL;AAAA;AAAA;AAAA;AAAA,gBAFK;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAKD;;AACD,QAAIG,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiBK,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,0BAAO;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA,kBAEHF,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiBM,GAAjB,CAAsBC,GAAD,IAAS;AAC5B,cAAIP,GAAG,CAACO,GAAD,CAAH,IAAYP,GAAG,CAACO,GAAD,CAAH,KAAa,IAA7B,EAAmC;AACjC,gCAAO;AAAA,sCACL;AAAG,gBAAA,SAAS,EAAC,OAAb;AAAA,0BACGA;AADH;AAAA;AAAA;AAAA;AAAA,sBADK,eAIL;AAAA,0BACGP,GAAG,CAACO,GAAD;AADN;AAAA;AAAA;AAAA;AAAA,sBAJK;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAQD,WATD,MASO;AACL,gCAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AACF,SAbD;AAFG;AAAA;AAAA;AAAA;AAAA,cAAP;AAkBD;;AACD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD,GA/BD;;AAiCA,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BACE;AAAG,MAAA,EAAE,EAAC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAET,KAAlB;AAAyB,MAAA,QAAQ,EAAGU,CAAD,IAAOT,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlD;AAAoE,MAAA,WAAW,EAAC,cAAhF;AAA+F,MAAA,KAAK,EAAC;AAArG;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,WAAlC;AAA8C,MAAA,OAAO,EAAE,MAAM;AAC3D,YAAIZ,KAAK,IAAIA,KAAK,CAACa,IAAN,EAAb,EACEV,MAAM,CAACL,QAAQ,CAACE,KAAD,CAAT,CAAN;AACH,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAYE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,gBACGI,OAAO;AADV;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA5DD;;GAAML,G;;KAAAA,G;AA8DN,eAAeA,GAAf","sourcesContent":["import { Button, TextField } from '@material-ui/core';\nimport React, { Fragment, useState } from 'react';\nimport './App.css';\nimport medicare from './medicare.json';\n\nconst App = () => {\n\n  // State management for the Bid ID and matching details\n  const [bidId, setBidId] = useState('');\n  const [bid, setBid] = useState({});\n\n  // Function to show content based on the state\n  // If a valid bid ID is entered, it'll show all the fields of the provider\n  // If an invalid Bid is entered, it shows error\n  const viewBid = () => {\n    if (!bid) {\n      return <div>\n        Invalid Bid ID Entered\n        <br />\n        Please enter a valid Bid ID\n      </div>\n    }\n    if (Object.keys(bid).length > 0) {\n      return <div id=\"table\">\n        {\n          Object.keys(bid).map((key) => {\n            if (bid[key] && bid[key] !== \"\\n\") {\n              return <div>\n                <p className=\"title\">\n                  {key}\n                </p>\n                <p >\n                  {bid[key]}\n                </p>\n              </div>\n            } else {\n              return <Fragment />\n            }\n          })\n        }\n      </div>\n    }\n    return <div>\n      Enter a Bid ID and submit to load details\n      </div>\n  }\n\n  return (\n    <div id=\"container\">\n      <p id=\"heading\">\n      🔍 Medicare Plan Search-Up Tool\n      </p>\n      <TextField value={bidId} onChange={(e) => setBidId(e.target.value)} placeholder=\"Enter Bid ID\" label=\"Bid ID\" />\n      <br />\n      <Button variant=\"contained\" color=\"secondary\" onClick={() => {\n        if (bidId && bidId.trim())\n          setBid(medicare[bidId]);\n      }}>\n        Submit\n      </Button>\n      <div id=\"details\">\n        {viewBid()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}